import{_ as i,c as a,a2 as n,o as l,aF as t}from"./chunks/framework.DhOcDEr8.js";const g=JSON.parse('{"title":"资源更新","description":"","frontmatter":{},"headers":[],"relativePath":"basic-config/update.md","filePath":"basic-config/update.md"}'),p={name:"basic-config/update.md"};function e(h,s,k,d,r,c){return l(),a("div",null,s[0]||(s[0]=[n(`<h1 id="资源更新" tabindex="-1">资源更新 <a class="header-anchor" href="#资源更新" aria-label="Permalink to &quot;资源更新&quot;">​</a></h1><h2 id="站点静态资源更新" tabindex="-1">站点静态资源更新 <a class="header-anchor" href="#站点静态资源更新" aria-label="Permalink to &quot;站点静态资源更新&quot;">​</a></h2><p>当主题的资源文件发生变化后（css、js），我们刷新网站其实并不会发生变化，其主要问题就是因为宝塔的 nginx 默认配置 css 和 js 文件使用的是强缓存。</p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> .*\\.(js|css)?$</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        expires </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     12h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        error_log </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">off</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        access_log </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/dev/null;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span></code></pre></div><p>官方默认配置 12 个小时内资源都是使用缓存的形式，这就导致我们一些新的变化没法及时展示了，为此我们需要将其调整为协商缓存的形式：</p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> .*\\.(js|css)?$</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        add_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Last-Modified $date_gmt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if_modified_since </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">off</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        etag </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        error_log </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/dev/null;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        access_log </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/dev/null;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span></code></pre></div><p>使用方式，在宝塔中找到你的站点，然后点击设置，找到配置文件，将内容改为上述代码内容即可：</p><p><img src="`+t+'" alt="" data-zoomable=""></p>',8)]))}const E=i(p,[["render",e]]);export{g as __pageData,E as default};
